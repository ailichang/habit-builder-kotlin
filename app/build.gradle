plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-parcelize"
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.habitbuilder'
    compileSdk 34

    defaultConfig {
        applicationId "com.habitbuilder"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "androidx.test:core-ktx:1.5.0"
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.mockito:mockito-core:5.12.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation 'org.robolectric:robolectric:4.12'
    testImplementation "com.google.truth:truth:1.4.2"

    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    androidTestImplementation "com.google.truth:truth:1.4.2"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1"

    def room_version = '2.6.1'
    implementation "androidx.room:room-runtime:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    implementation "androidx.recyclerview:recyclerview:1.3.2"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.2.0-alpha01"
    def lifecycle_version = '2.8.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    def fragment_version = '1.7.1'
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.cardview:cardview:1.0.0"
    def preference_version = "1.2.1"
    implementation "androidx.preference:preference-ktx:$preference_version"

    def dagger_version = '2.51.1'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    def hilt_version = '2.51.1'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}